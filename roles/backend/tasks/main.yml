#- name: verfiy nodejs
 # ansible.builtin.shell: type npm
  #register: npm
#  ignore_errors: yes


#- name: reas npm
 # ansible.builtin.debug:
  #  msg: "{{npm}}"

- name: Install NodeJS Repos
  ansible.builtin.shell: curl -sl https://rpm.nodesource.com/setup_lts.x | bash
  when: npm.rc != 0

- name: Install NodeJS
  ansible.builtin.dnf:
    name: nodejs
    state:  present
  when: npm.rc != 0

- name: Copy Backend Service File
  ansible.builtin.template:
    src: backend.service
    dest: /etc/systemd/system/backend.service

- name: Add Application User
  ansible.builtin.user:
    name: expense

- name: Clean App Content
  ansible.builtin.file:
    path: /app
    state: absent

- name: create dirctory
  ansible.builtin.file:
     path: /app
     state: directory

- name: download and extract
  ansible.builtin.unarchive:
     src: https://expense-artifacts.s3.amazonaws.com/backend.zip
     dest: /app
     remote_src: yes

- name: Download Dependencies
  ansible.builtin.shell: npm install
  args:
     chdir: /app

#- name: install node js Dependencies
 # ansible.builtin.shell: npm install
  #args:
   # chdir: /app


#- name: Include App Pre-requisites
 # ansible.builtin.import_role:
  #  name: common
   # tasks_from: app_prereq


- name: install mysql client
  ansible.builtin.dnf:
    name: mysql
    state: present

- name: load schema
  ansible.builtin.shell: mysql -h {{ lookup('aws_ssm','expense.backend.DB_HOST',region='us-east-1' ) }} -uroot -p{{ lookup('aws_ssm','expense.backend.DB_PASS',region='us-east-1' ) }} < /app/schema/backend.sql

- name: Start Backend Service
  ansible.builtin.systemd:
    name: backend
    state: restarted
    enabled: yes
    daemon-reload: yes